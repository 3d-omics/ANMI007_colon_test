[["index.html", "3D’omics | Colon microdissection test Developmental work Chapter 1 Introduction 1.1 Prepare the R environment", " 3D’omics | Colon microdissection test Developmental work Antton Alberdi1 2024-05-08 Chapter 1 Introduction This webbook contains all the code used for the study on the effect of probiotics on Salmonella infection in broiler chicken. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/3d-omics/ANMI007_colon_test.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(broom) library(broom.mixed) library(rairtable) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(jpeg) library(patchwork) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(ANCOMBC) library(lme4) library(Hmsc) University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["data-preparation.html", "Chapter 2 Data preparation 2.1 Count data 2.2 Filter and normalise data 2.3 Color scheme 2.4 Wrap working objects", " Chapter 2 Data preparation 2.0.1 Sample metadata sample_metadata &lt;- airtable(&quot;4-MSE-Info&quot;, &quot;appKakM1bnKSekwuW&quot;) %&gt;% #get base ID from Airtable browser URL read_airtable(., fields = c(&quot;ID&quot;,&quot;LabBatch_text&quot;,&quot;IntestinalSection&quot;,&quot;SampleType&quot;,&quot;Xcoord&quot;,&quot;Ycoord&quot;,&quot;size&quot;,&quot;cryosection_text&quot;,&quot;buffer_text&quot;), id_to_col = TRUE) %&gt;% #get 3 columns from MAGs table filter(LabBatch_text %in% c(&quot;MSEB0006&quot;,&quot;MSEB0010&quot;)) %&gt;% rename(batch=LabBatch_text,microsample=ID,section=IntestinalSection,type=SampleType,cryosection=cryosection_text,buffer=buffer_text) %&gt;% select(microsample,section,type,batch,cryosection,buffer,Xcoord,Ycoord,size) %&gt;% unnest(c(section, Xcoord, Ycoord, size)) %&gt;% arrange(microsample) 2.1 Count data read_counts &lt;- read_tsv(&quot;data/MSEB0006_read_counts.tsv&quot;) %&gt;% left_join(read_tsv(&quot;data/MSEB0010_read_counts.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% rename(genome = 1) %&gt;% pivot_longer(!genome, names_to = &quot;data&quot;, values_to=&quot;counts&quot;) %&gt;% mutate(sample = substr(data, 1, 7)) %&gt;% group_by(genome,sample) %&gt;% summarise(counts=sum(counts), .groups=&quot;drop&quot;) %&gt;% pivot_wider(names_from=&quot;sample&quot;, values_from=&quot;counts&quot;) 2.1.1 Base hit table This is the document containing the number of nucleotide bases have been covered by at least one read in each sample and MAG. This information is used to calculate MAG coverage values. basehits &lt;- read_tsv(&quot;data/MSEB0006_covered_bases.tsv&quot;) %&gt;% left_join(read_tsv(&quot;data/MSEB0010_covered_bases.tsv&quot;),by=&quot;sequence_id&quot;) %&gt;% rename(genome = 1) %&gt;% pivot_longer(!genome, names_to = &quot;data&quot;, values_to=&quot;counts&quot;) %&gt;% mutate(sample = substr(data, 1, 7)) %&gt;% group_by(genome,sample) %&gt;% summarise(counts=sum(counts), .groups=&quot;drop&quot;) %&gt;% pivot_wider(names_from=&quot;sample&quot;, values_from=&quot;counts&quot;) 2.1.2 Genome metadata Relevant metadata of genomes is fetched from 2-3 files and merged into one genome metadata object for downstream analyses. 2.1.2.1 Taxonomy This is the raw taxonomy table generated by GTDBtk, which is simplified for downstream analyses. genome_taxonomy &lt;- read_tsv(&quot;data/genome_taxonomy.tsv&quot;) %&gt;% rename(genome = user_genome) %&gt;% mutate(genome = str_replace_all(genome,&quot;\\\\.fa&quot;, &quot;&quot;)) %&gt;% separate(classification, c(&quot;domain&quot;,&quot;phylum&quot;,&quot;class&quot;,&quot;order&quot;,&quot;family&quot;,&quot;genus&quot;,&quot;species&quot;), sep =&quot;;&quot;) %&gt;% select(genome,domain,phylum,class,order,family,genus,species) %&gt;% arrange(match(genome, read_counts$genome)) 2.1.2.2 Genome quality Quality properties of the genomes. genome_quality &lt;- read_tsv(&quot;data/genome_quality.tsv&quot;) %&gt;% rename(genome = 1) %&gt;% mutate(genome = str_replace_all(genome,&quot;\\\\.fa&quot;, &quot;&quot;)) %&gt;% arrange(match(genome, read_counts$genome)) %&gt;% select(genome, Completeness, Contamination, Coding_Density, Genome_Size) %&gt;% rename(completeness=Completeness,contamination=Contamination,coding_density=Coding_Density,length=Genome_Size) 2.1.2.3 Merged metadata object Merge taxonomy, length and quality information genome_metadata &lt;- genome_taxonomy %&gt;% left_join(genome_quality,by=join_by(genome==genome)) #join quality 2.1.3 Genome tree This is the raw tree generated by GTDBtk, which needs to be pruned to obtain the phylogenetic tree of the genomes. Note that the archaeal tree is only generated if any archaeans are detected among the genomes. genome_tree &lt;- read.tree(&quot;data/genome_tree.tre&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names genome_tree &lt;- keep.tip(genome_tree, tip=read_counts$genome) # keep only MAG tips 2.1.4 MAG functional annotations This is the raw annotation table generated by DRAM, which is used to generate GIFT data using distillR. genome_annotations &lt;- read_tsv(&quot;data/genome_annotations.tsv.xz&quot;) %&gt;% rename(gene=1,genome=2) 2.2 Filter and normalise data Raw data needs to be filtered and normalised to make it useful for downstream analyses. 2.2.1 Generate coverage table By dividing the number of base hits by the length of each genome, coverage values can be calculated. genome_coverage &lt;- basehits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.2.2 Coverage filtering Genomes that have less than 30% of their length covered by reads are turned into zeros to account for the random allocation of reads across genomes due to mapping heuristics. min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.2.3 Generate genome count table After filtering the low-coverage reads, read counts are transformed into genome counts using genome-length and read-length information. readlength=150 #change if sequencing read length is different genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.2.4 Distil functional annotations Raw functional annotations are distilled into genome-inferred functional traits to generate biologically more meaningful functional traits for downstream analyses. genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19)) 2.3 Color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.4 Wrap working objects In the last step, the objects that are needed for downstream analyses are stored in an R object. save(read_counts, read_counts_filt, genome_counts, genome_counts_filt, genome_tree, genome_metadata, genome_gifts, sample_metadata, phylum_colors, file = &quot;data/data.Rdata&quot;) read_counts: Number of reads mapped to each genome in each sample. Note this is the unfiltered and unnormalised raw community composition table. genome_counts: Number of genomes quantified in each sample, calculated through filtering and normalising read_counts. This is the community composition table to be used in downstream analyses unless otherwise stated. genome_tree: Phylogenetic tree of the genomes, to be employed in downstream phylogenetic analyses. genome_metadata: Taxonomic and quality information of the genomes. sample_metadata: Treatment/population and other relevant metadata of the samples. "],["data-quality.html", "Chapter 3 Data quality 3.1 Load statistics 3.2 Individual overview 3.3 Biplots 3.4 Quality flagging", " Chapter 3 Data quality load(&quot;data/data.Rdata&quot;) 3.1 Load statistics read_stats1 &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/D9oEqxuxql/reports/by_step/reads_data/multiqc_fastqc.txt&quot;, col_types = cols_only(&quot;Sample&quot; = col_character(), &quot;Total Sequences&quot; = col_double(), &quot;%GC&quot; = col_double(), &quot;total_deduplicated_percentage&quot; = col_double())) read_stats2 &lt;- read_tsv(&quot;https://sid.erda.dk/share_redirect/GbFL7VgO1w/reports/by_step/reads_data/multiqc_fastqc.txt&quot;, col_types = cols_only(&quot;Sample&quot; = col_character(), &quot;Total Sequences&quot; = col_double(), &quot;%GC&quot; = col_double(), &quot;total_deduplicated_percentage&quot; = col_double())) read_stats &lt;- bind_rows(read_stats1,read_stats2) %&gt;% mutate(Sample = str_extract(Sample, &quot;M\\\\d+&quot;)) %&gt;% rename(microsample=Sample,total_sequences=&quot;Total Sequences&quot;,percent_gc=&quot;%GC&quot;,percent_unique=total_deduplicated_percentage) %&gt;% group_by(microsample) %&gt;% summarise(total_sequences=sum(total_sequences), percent_unique=mean(percent_unique), percent_gc=mean(percent_gc)) host_mapping_stats &lt;- read_tsv(c(&quot;https://sid.erda.dk/share_redirect/b9ZbTPY0kQ/reports/by_step/preprocess_data/multiqc_samtools_flagstat.txt&quot;, &quot;https://sid.erda.dk/share_redirect/GbFL7VgO1w/reports/by_step/preprocess_data/multiqc_samtools_flagstat.txt&quot;)) %&gt;% mutate(reference = case_when( grepl(&quot;GRCh38&quot;, Sample, ignore.case = TRUE) ~ &quot;human&quot;, grepl(&quot;GRCg7b&quot;, Sample, ignore.case = TRUE) ~ &quot;chicken&quot;, TRUE ~ NA )) %&gt;% filter(reference==&quot;chicken&quot;) %&gt;% mutate(Sample = str_extract(Sample, &quot;M\\\\d+&quot;)) %&gt;% rename(microsample=Sample,reads_mapped_host=mapped_passed,reads_mapped_host_percent=mapped_passed_pct) %&gt;% select(microsample,reads_mapped_host,reads_mapped_host_percent) %&gt;% group_by(microsample) %&gt;% summarise(reads_mapped_host=sum(reads_mapped_host),reads_mapped_host_percent=mean(reads_mapped_host_percent)) human_mapping_stats &lt;- read_tsv(c(&quot;https://sid.erda.dk/share_redirect/b9ZbTPY0kQ/reports/by_step/preprocess_data/multiqc_samtools_flagstat.txt&quot;, &quot;https://sid.erda.dk/share_redirect/GbFL7VgO1w/reports/by_step/preprocess_data/multiqc_samtools_flagstat.txt&quot;)) %&gt;% mutate(reference = case_when( grepl(&quot;GRCh38&quot;, Sample, ignore.case = TRUE) ~ &quot;human&quot;, grepl(&quot;GRCg7b&quot;, Sample, ignore.case = TRUE) ~ &quot;chicken&quot;, TRUE ~ NA )) %&gt;% filter(reference==&quot;human&quot;) %&gt;% mutate(Sample = str_extract(Sample, &quot;M\\\\d+&quot;)) %&gt;% rename(microsample=Sample, reads_mapped_human=mapped_passed,reads_mapped_human_percent=mapped_passed_pct) %&gt;% select(microsample,reads_mapped_human,reads_mapped_human_percent) %&gt;% group_by(microsample) %&gt;% summarise(reads_mapped_human=sum(reads_mapped_human),reads_mapped_human_percent=mean(reads_mapped_human_percent)) quantification_stats &lt;- read_tsv(c( &quot;https://sid.erda.dk/share_redirect/D9oEqxuxql/reports/by_step/quantify_data/multiqc_samtools_stats.txt&quot;, &quot;https://sid.erda.dk/share_redirect/GbFL7VgO1w/reports/by_step/quantify_data/multiqc_samtools_stats.txt&quot;)) %&gt;% filter(str_detect(Sample, &quot;mgg-pbdrep&quot;)) %&gt;% mutate(Sample = str_extract(Sample, &quot;M\\\\d+&quot;)) %&gt;% rename(microsample=Sample) %&gt;% group_by(microsample) %&gt;% summarise(reads_mapped=sum(reads_mapped),reads_mapped_percent=mean(reads_mapped_percent)) quality_stats &lt;- read_stats %&gt;% left_join(host_mapping_stats, by=join_by(microsample==microsample)) %&gt;% left_join(human_mapping_stats, by=join_by(microsample==microsample)) %&gt;% left_join(quantification_stats, by=join_by(microsample==microsample)) 3.2 Individual overview 3.2.1 Sequencing depth quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=total_sequences,y=microsample,fill=section))+ geom_col()+ scale_fill_manual(values=c(&quot;#a3d1cf&quot;,&quot;#d1a3cf&quot;)) + geom_vline(xintercept=10000000, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Number of reads&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.2.2 Sequence duplication quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=percent_unique,y=microsample,fill=section))+ geom_col()+ scale_fill_manual(values=c(&quot;#a3d1cf&quot;,&quot;#d1a3cf&quot;)) + geom_vline(xintercept=35, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Percentage of non-duplicates&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.2.3 GC % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=percent_gc,y=microsample,fill=section))+ geom_col()+ scale_fill_manual(values=c(&quot;#a3d1cf&quot;,&quot;#d1a3cf&quot;)) + geom_vline(xintercept=60, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Percentage of GC&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.2.4 Host % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=reads_mapped_host_percent,y=microsample,fill=section))+ geom_col()+ scale_fill_manual(values=c(&quot;#a3d1cf&quot;,&quot;#d1a3cf&quot;)) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Host %&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.2.5 Human % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=reads_mapped_human_percent,y=microsample,fill=section))+ geom_col()+ scale_fill_manual(values=c(&quot;#a3d1cf&quot;,&quot;#d1a3cf&quot;)) + geom_vline(xintercept=5, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Human %&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.2.6 Bacteria mapping % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=reads_mapped_percent,y=microsample,fill=section))+ geom_col()+ scale_fill_manual(values=c(&quot;#a3d1cf&quot;,&quot;#d1a3cf&quot;)) + geom_vline(xintercept=75, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Mapped to MAGs (%)&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) 3.3 Biplots 3.3.1 Sequencing depth vs. GC % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(type == &quot;Positive&quot;) %&gt;% ggplot(aes(x=percent_gc,y=total_sequences,color=section))+ geom_point()+ scale_color_manual(values=c(&quot;#a3d1cf&quot;,&quot;#d1a3cf&quot;)) + facet_nested(. ~ batch, scales=&quot;free&quot;) + labs(color=&quot;Sexrion&quot;) 3.3.2 Unique sequences vs. GC % quality_stats %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(type == &quot;Positive&quot;) %&gt;% ggplot(aes(x=percent_gc,y=percent_unique,color=section))+ geom_point()+ scale_color_manual(values=c(&quot;#a3d1cf&quot;,&quot;#d1a3cf&quot;)) + facet_nested(. ~ batch, scales=&quot;free&quot;)+ labs(color=&quot;Library protocol&quot;) 3.4 Quality flagging quality &lt;- quality_stats %&gt;% mutate(depth = case_when( total_sequences &lt;= 10000000 ~ 0, total_sequences &gt; 10000000 ~ 1, TRUE ~ NA)) %&gt;% mutate(duplicates = case_when( percent_unique &lt;= 35 ~ 0, percent_unique &gt; 35 ~ 1, TRUE ~ NA)) %&gt;% mutate(gc = case_when( percent_gc &gt;= 60 ~ 0, percent_gc &lt; 60 ~ 1, TRUE ~ NA)) %&gt;% mutate(human = case_when( reads_mapped_human_percent &gt;= 5 ~ 0, reads_mapped_human_percent &lt; 5 ~ 1, TRUE ~ NA)) %&gt;% mutate(bacteria = case_when( reads_mapped_percent &lt;= 75 ~ 0, reads_mapped_percent &gt; 75 ~ 1, TRUE ~ NA)) %&gt;% select(microsample, depth, duplicates, gc, human, bacteria) %&gt;% mutate(quality = depth + duplicates + gc + human + bacteria) %&gt;% select(microsample, quality) quality %&gt;% write_tsv(&quot;results/quality.tsv&quot;) 3.4.1 Quality overview quality %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% ggplot(aes(x=quality,y=microsample,fill=section))+ geom_col()+ scale_fill_manual(values=c(&quot;#a3d1cf&quot;,&quot;#d1a3cf&quot;)) + geom_vline(xintercept=5, linetype=&quot;dashed&quot;, color = &quot;red&quot;, size=1) + facet_nested(batch + section + type ~ ., scales=&quot;free&quot;, space=&quot;free&quot;, switch = &quot;y&quot;) + theme(strip.text.y.left = element_text(angle = 0)) + labs(x=&quot;Quality score&quot;, y=&quot;Microsamples&quot;, fill=&quot;Library protocol&quot;) quality %&gt;% left_join(sample_metadata,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(type == &quot;Positive&quot;) %&gt;% group_by(section) %&gt;% summarise(average=mean(quality, na.rm=TRUE), percentage_5 = mean(quality == 5, na.rm = TRUE) * 100) %&gt;% tt() tinytable_z0eqhzlrrpa1auk21eoy .table td.tinytable_css_i7421wxso4ocp7xfx8c5, .table th.tinytable_css_i7421wxso4ocp7xfx8c5 { border-bottom: solid 0.1em #d3d8dc; } section average percentage_5 Caecum right 4.583333 77.77778 Colon 2.845070 15.49296 "],["community-composition.html", "Chapter 4 Community composition 4.1 Taxonomy barplot", " Chapter 4 Community composition load(&quot;data/data.Rdata&quot;) quality &lt;- read_tsv(&quot;results/quality.tsv&quot;) Rows: 192 Columns: 2 ── Column specification ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (1): microsample dbl (1): quality ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. 4.1 Taxonomy barplot 4.1.1 Positive samples, coverage-filtered #Get phylum colors from the EHI standard phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() Rows: 202 Columns: 2 ── Column specification ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (2): phylum, colors ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;microsample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(sample_metadata, by = join_by(microsample == microsample)) %&gt;% #append sample metadata left_join(quality, by = join_by(microsample == microsample)) %&gt;% #append sample metadata mutate(section=unlist(section)) %&gt;% filter(!is.na(count)) %&gt;% filter(count &gt; 0) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(type == &quot;Positive&quot;) %&gt;% filter(quality == 5) %&gt;% ggplot(., aes(x=count,y=microsample, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors[-4]) + labs(x = &quot;Relative abundance&quot;, y=&quot;Microsamples&quot;) + facet_nested(batch + section ~ ., scales=&quot;free_y&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(strip.text.y = element_text(angle = 0), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.spacing = unit(0, &quot;lines&quot;)) + labs(fill=&quot;Phylum&quot;) 4.1.2 Positive samples, coverage-unfiltered #Get phylum colors from the EHI standard phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() Rows: 202 Columns: 2 ── Column specification ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (2): phylum, colors ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. genome_counts %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;microsample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(sample_metadata, by = join_by(microsample == microsample)) %&gt;% #append sample metadata left_join(quality, by = join_by(microsample == microsample)) %&gt;% #append sample metadata mutate(section=unlist(section)) %&gt;% filter(!is.na(count)) %&gt;% filter(count &gt; 0) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(type == &quot;Positive&quot;) %&gt;% filter(quality == 5) %&gt;% ggplot(., aes(x=count,y=microsample, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(x = &quot;Relative abundance&quot;, y=&quot;Microsamples&quot;) + facet_nested(batch + section ~ ., scales=&quot;free_y&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(strip.text.y = element_text(angle = 0), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.spacing = unit(0, &quot;lines&quot;)) + labs(fill=&quot;Phylum&quot;) 4.1.3 Control samples, coverage-unfiltered #Get phylum colors from the EHI standard phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% #filter(phylum %in% c(&quot;p__Actinomycetota&quot;,&quot;p__Bacillota&quot;,&quot;p__Bacillota_A&quot;,&quot;p__Pseudomonadota&quot;,&quot;p__Verrucomicrobiota&quot;)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() Rows: 202 Columns: 2 ── Column specification ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (2): phylum, colors ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. genome_counts %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;microsample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(microsample == microsample)) %&gt;% #append sample metadata filter(is.na(Xcoord)) %&gt;% filter(type %in% c(&quot;NegativeMembrane&quot;,&quot;NegativeCollection&quot;,&quot;NegativeReaction&quot;)) %&gt;% ggplot(., aes(x=count,y=microsample, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + labs(x = &quot;Relative abundance&quot;, y=&quot;Membrane controls&quot;) + facet_nested(batch + section + type ~ ., scales=&quot;free_y&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(strip.text.y = element_text(angle = 0), axis.text.y = element_blank(), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.spacing = unit(0, &quot;lines&quot;)) + labs(fill=&quot;Phylum&quot;) vertical_tree &lt;- force.ultrametric(genome_tree,method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) + geom_tiplab() *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** Found more than one class &quot;phylo&quot; in cache; using the first, from namespace &#39;phyloseq&#39; Also defined by &#39;tidytree&#39; phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% select(phylum) Rows: 202 Columns: 2 ── Column specification ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (2): phylum, colors ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% select(colors) %&gt;% pull() Rows: 202 Columns: 2 ── Column specification ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Delimiter: &quot;\\t&quot; chr (2): phylum, colors ℹ Use `spec()` to retrieve the full column specification for this data. ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. vertical_tree &lt;- gheatmap(vertical_tree, phylum_colors, offset=-0.3, width=0.1, colnames=FALSE) + scale_fill_manual(values=colors_alphabetic) + new_scale_fill() Scale for y is already present. Adding another scale for y, which will replace the existing scale. Scale for fill is already present. Adding another scale for fill, which will replace the existing scale. sample_selection &lt;- sample_metadata %&gt;% filter(!is.na(Xcoord)) %&gt;% filter(cryosection == &quot;G121eI101B&quot;) %&gt;% left_join(quality, by=join_by(microsample==microsample)) %&gt;% filter(quality&gt;=5) %&gt;% select(microsample) %&gt;% pull() genome_counts_selected &lt;- genome_counts_filt %&gt;% select(all_of(c(&quot;genome&quot;,sample_selection))) %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% tss() vertical_tree &lt;- gheatmap(vertical_tree, genome_counts_selected, offset=-0.2, width=0.5, colnames=FALSE, colnames_angle=90, font.size=3, colnames_position=&quot;top&quot;, colnames_offset_y = 15) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;#315b7d&quot;, na.value=&quot;#f4f4f4&quot;) + new_scale_fill() Scale for y is already present. Adding another scale for y, which will replace the existing scale. Scale for fill is already present. Adding another scale for fill, which will replace the existing scale. vertical_tree "],["alpha-diversity.html", "Chapter 5 Alpha diversity 5.1 Filtered 5.2 Unfiltered", " Chapter 5 Alpha diversity 5.1 Filtered #Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(microsample==microsample)) %&gt;% full_join(phylogenetic,by=join_by(microsample==microsample)) %&gt;% left_join(sample_metadata, by=join_by(microsample==microsample)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(&quot;results/alpha_div_filtered.tsv&quot;) # Print alpha diversity alpha_diversity %&gt;% select(microsample,richness, neutral, phylogenetic, section, buffer, batch, Xcoord, Ycoord, size) %&gt;% tt() tinytable_8x9sj8eztwd1brqj29x0 .table td.tinytable_css_hbzsuztc1s2to5zdlb5m, .table th.tinytable_css_hbzsuztc1s2to5zdlb5m { border-bottom: solid 0.1em #d3d8dc; } microsample richness neutral phylogenetic section buffer batch Xcoord Ycoord size M300554 105 45.801912 3.937760 Caecum right B11 MSEB0006 74953.33 27445.67 4976 M300555 3 2.654441 1.663073 Caecum right B11 MSEB0006 72020.28 33695.14 4976 M300556 3 2.921247 1.820079 Caecum right B11 MSEB0006 75415.39 27819.35 4976 M300557 81 43.169579 3.736918 Caecum right B11 MSEB0006 76113.48 28351.85 4976 M300559 105 46.235275 3.950650 Caecum right B11 MSEB0006 76849.23 29025.05 4976 M300560 99 44.437305 4.093363 Caecum right B11 MSEB0006 75971.70 29352.86 4976 M300561 103 44.311493 4.120349 Caecum right B11 MSEB0006 76680.94 29558.16 4976 M300562 103 46.882732 4.048584 Caecum right B11 MSEB0006 74883.32 29170.18 5140 M300563 109 47.059960 4.017112 Caecum right B11 MSEB0006 75220.99 29120.51 5140 M300564 12 10.477468 2.973998 Caecum right B11 MSEB0006 75894.62 29134.86 5140 M300566 93 43.059847 3.786416 Caecum right B11 MSEB0006 76922.54 29224.45 5140 M300567 99 44.029116 4.039769 Caecum right B11 MSEB0006 77492.20 29097.78 5140 M300569 100 46.805777 4.129635 Caecum right B11 MSEB0006 77495.46 28977.76 5140 M300570 100 44.462204 3.978752 Caecum right B11 MSEB0006 74950.84 28473.11 4815 M300571 94 42.482781 3.903377 Caecum right B11 MSEB0006 75619.95 28632.40 4815 M300572 56 32.680577 3.764339 Caecum right B11 MSEB0006 76345.93 29031.81 4815 M300574 97 43.914978 3.991990 Caecum right B11 MSEB0006 76921.00 29347.99 4815 M300576 92 43.158898 3.979982 Caecum right B11 MSEB0006 77104.53 29588.79 4815 M300577 103 44.666492 4.003275 Caecum right B11 MSEB0006 77418.90 29907.92 4815 M300578 101 44.526067 3.942073 Caecum right B12 MSEB0006 76897.21 30198.48 5140 M300580 102 43.777961 3.966526 Caecum right B12 MSEB0006 77026.94 30039.53 5140 M300581 79 39.975639 3.898216 Caecum right B12 MSEB0006 77028.60 29718.20 5140 M300582 78 38.898531 3.907879 Caecum right B12 MSEB0006 77019.21 29448.24 5140 M300583 95 38.373844 4.002493 Caecum right B12 MSEB0006 77009.20 28923.10 5140 M300584 104 44.918626 3.992409 Caecum right B12 MSEB0006 77019.41 28061.84 5140 M300588 102 42.618728 3.997889 Caecum right B12 MSEB0006 75330.02 26890.36 5141 M300589 99 41.459691 3.963052 Caecum right B12 MSEB0006 75862.87 27323.96 5141 M300590 96 40.482162 4.131238 Caecum right B12 MSEB0006 76508.23 27653.84 5141 M300592 103 40.971234 4.092363 Caecum right B12 MSEB0006 77351.46 28017.27 5141 M300593 98 42.126550 4.082443 Caecum right B12 MSEB0006 77854.22 28261.49 5141 M300594 96 43.659879 4.066965 Caecum right B12 MSEB0006 75509.65 26477.82 4976 M300595 102 37.738766 4.076473 Caecum right B12 MSEB0006 75650.54 26591.91 4976 M300596 105 40.160724 4.060594 Caecum right B12 MSEB0006 75822.84 26598.11 4976 M300597 100 40.582505 4.107775 Caecum right B12 MSEB0006 76147.10 26625.28 4976 M300598 101 41.887011 4.052863 Caecum right B12 MSEB0006 76899.24 26623.52 4976 M300599 104 42.932100 3.970582 Caecum right B12 MSEB0006 76852.73 26643.02 4976 M300602 4 3.258694 1.449831 Ileum B11 MSEB0006 104424.70 42749.48 5140 M300603 3 2.026603 1.266765 Ileum B11 MSEB0006 104606.90 42459.54 5140 M300605 2 1.729081 1.216363 Ileum B11 MSEB0006 104954.50 42730.89 5140 M300606 1 1.000000 1.000000 Ileum B11 MSEB0006 105122.50 42666.74 5140 M300608 4 2.614424 1.430317 Ileum B11 MSEB0006 105262.70 42589.77 5140 M300609 4 3.096111 1.458992 Ileum B11 MSEB0006 105328.90 42703.60 5140 M300610 4 3.092445 1.481998 Ileum B11 MSEB0006 105102.40 41497.10 4976 M300611 1 1.000000 1.000000 Ileum B11 MSEB0006 105146.00 41596.22 4976 M300612 4 3.200070 1.470375 Ileum B11 MSEB0006 105281.00 41702.52 4976 M300613 1 1.000000 1.000000 Ileum B11 MSEB0006 105408.30 41533.66 4976 M300616 3 1.602470 1.194510 Ileum B11 MSEB0006 105595.70 41999.37 4976 M300617 4 2.597621 1.413674 Ileum B11 MSEB0006 105983.00 42106.21 4976 M300619 3 1.859573 1.239761 Ileum B11 MSEB0006 106845.70 41525.80 5306 M300622 3 2.658765 1.355956 Ileum B11 MSEB0006 107262.30 42133.87 5306 M300623 3 2.873136 1.383011 Ileum B11 MSEB0006 107820.60 41925.02 5306 M300624 1 1.000000 1.000000 Ileum B11 MSEB0006 107233.50 41764.35 5306 M300627 3 2.862931 1.381746 Ileum B12 MSEB0006 108112.00 45420.81 4815 M300628 4 2.628829 1.503377 Ileum B12 MSEB0006 108221.60 45346.45 4815 M300629 4 1.907144 1.304654 Ileum B12 MSEB0006 108085.50 45636.13 4815 M300630 4 1.854313 1.283251 Ileum B12 MSEB0006 108093.70 45848.93 4815 M300631 5 3.608828 1.726759 Ileum B12 MSEB0006 107697.50 45704.29 4815 M300633 6 2.179216 1.436402 Ileum B12 MSEB0006 107727.50 45487.09 4815 M300634 5 2.654260 1.436436 Ileum B12 MSEB0006 106635.90 42106.55 5384 M300636 4 2.513021 1.488272 Ileum B12 MSEB0006 106545.50 42220.70 5384 M300638 4 2.712719 1.467680 Ileum B12 MSEB0006 106647.00 42288.86 5384 M300639 7 2.562594 1.490282 Ileum B12 MSEB0006 106800.50 41821.88 5384 M300640 3 2.025162 1.266492 Ileum B12 MSEB0006 107052.70 42525.49 5384 M300642 1 1.000000 1.000000 Ileum B12 MSEB0006 108030.70 43599.50 4976 M300644 5 1.600004 1.210094 Ileum B12 MSEB0006 NA NA NA M300645 5 1.502894 1.241772 Ileum B12 MSEB0006 107988.20 43509.47 4976 M300647 5 3.154388 1.460507 Ileum B12 MSEB0006 107969.50 43138.84 4976 M300648 5 1.758864 1.268011 Ileum B12 MSEB0006 107883.70 43169.50 4976 M300704 47 26.137840 3.656487 Colon B11 MSEB0010 10676.97 15665.82 5140 M300705 62 39.308166 3.660768 Colon B11 MSEB0010 10812.32 15756.81 5140 M300706 58 33.851408 3.774257 Colon B11 MSEB0010 11055.42 15656.04 5140 M300707 74 38.632295 3.920088 Colon B11 MSEB0010 11216.84 15649.19 5140 M300708 85 41.477440 3.830608 Colon B11 MSEB0010 11879.87 15812.03 5140 M300711 83 40.402932 3.871549 Colon B11 MSEB0010 12278.13 15716.47 5140 M300712 84 42.428071 3.859852 Colon B11 MSEB0010 12139.94 15889.85 4976 M300714 77 39.203234 3.974200 Colon B11 MSEB0010 12138.96 16135.22 4976 M300715 84 41.934901 3.820654 Colon B11 MSEB0010 12164.85 16944.14 4976 M300716 64 38.066001 3.624855 Colon B11 MSEB0010 12650.44 17948.63 4976 M300717 66 38.461828 3.862272 Colon B11 MSEB0010 13434.73 19286.92 4976 M300718 96 46.399944 3.883736 Colon B11 MSEB0010 13238.20 20246.16 4976 M300721 92 47.317073 3.759318 Colon B11 MSEB0010 10372.82 20398.48 5306 M300722 56 33.260330 3.727113 Colon B11 MSEB0010 11173.11 20408.59 5306 M300724 80 43.719402 3.794995 Colon B11 MSEB0010 13295.25 18310.97 5306 M300725 21 17.447617 2.930725 Colon B11 MSEB0010 12939.03 18128.54 5306 M300727 81 41.998480 3.947856 Colon B11 MSEB0010 12777.09 17606.38 5306 M300729 8 7.637585 2.619316 Colon B11 MSEB0010 12551.79 21653.42 4815 M300730 14 12.494169 2.806653 Colon B11 MSEB0010 12478.73 21318.48 4815 M300731 78 42.804279 3.541318 Colon B11 MSEB0010 12362.88 20562.75 4815 M300733 29 21.650469 3.174838 Colon B11 MSEB0010 12653.67 19720.44 4815 M300735 67 39.697104 3.650732 Colon B11 MSEB0010 11471.31 19136.40 4815 M300736 89 44.552604 3.826006 Colon B11 MSEB0010 13507.34 18129.93 5647 M300738 85 45.260227 3.746172 Colon B11 MSEB0010 13010.06 17942.33 5647 M300741 75 40.579742 3.741690 Colon B11 MSEB0010 12684.37 17716.75 5647 M300742 82 42.384536 3.881068 Colon B11 MSEB0010 12621.55 17543.54 5647 M300743 76 41.817272 3.730852 Colon B11 MSEB0010 12372.90 16657.60 5647 M300744 32 24.141380 3.136654 Colon B11 MSEB0010 11994.45 14153.13 4976 M300745 59 36.354256 3.462527 Colon B11 MSEB0010 12007.50 14299.24 4976 M300747 85 45.968277 3.649012 Colon B11 MSEB0010 12029.35 14662.48 4976 M300748 64 37.120180 3.504468 Colon B11 MSEB0010 12076.59 15671.87 4976 M300750 73 39.843866 3.738390 Colon B11 MSEB0010 12060.51 16688.98 4976 M300751 80 43.869573 3.738696 Colon B11 MSEB0010 11931.20 19713.77 4976 M300753 65 35.118403 3.589983 Colon B12 MSEB0010 13884.30 20066.13 4815 M300755 76 38.643425 3.896215 Colon B12 MSEB0010 13715.68 19528.97 4815 M300756 103 43.201393 3.990432 Colon B12 MSEB0010 13508.64 19087.25 4815 M300757 83 39.509499 3.977505 Colon B12 MSEB0010 13209.32 18911.46 4815 M300758 98 47.502632 3.784666 Colon B12 MSEB0010 13454.50 18211.88 4815 M300759 105 45.507585 4.065463 Colon B12 MSEB0010 13356.63 17525.29 4815 M300760 78 37.482344 3.895542 Colon B12 MSEB0010 12866.49 15050.07 5140 M300761 115 45.578238 4.024987 Colon B12 MSEB0010 12921.94 15311.99 5140 M300763 125 50.960537 3.971121 Colon B12 MSEB0010 12995.95 15577.55 5140 M300764 115 48.329755 3.842227 Colon B12 MSEB0010 12999.11 16205.10 5140 M300766 112 46.704807 4.063781 Colon B12 MSEB0010 13128.60 18741.54 5140 M300767 100 41.243887 3.894222 Colon B12 MSEB0010 13103.68 20085.08 5140 M300768 79 38.784598 3.840394 Colon B12 MSEB0010 12299.78 15261.25 4815 M300771 58 34.643272 3.720942 Colon B12 MSEB0010 12230.64 14216.24 4815 M300772 102 47.639783 3.790707 Colon B12 MSEB0010 12192.80 14393.52 4815 M300773 106 50.262746 3.545739 Colon B12 MSEB0010 12122.68 16011.33 4815 M300774 114 46.306826 4.058256 Colon B12 MSEB0010 12155.62 16716.47 4815 M300775 92 40.482612 3.917541 Colon B12 MSEB0010 12941.43 17792.21 4815 M300776 71 37.655019 3.747935 Colon B12 MSEB0010 10481.87 16446.70 5306 M300778 82 41.038918 3.831210 Colon B12 MSEB0010 10349.88 16974.87 5306 M300780 88 40.130094 3.880301 Colon B12 MSEB0010 10386.11 17635.79 5306 M300782 86 39.302414 3.892170 Colon B12 MSEB0010 10499.61 18348.85 5306 M300783 67 37.371632 3.772192 Colon B12 MSEB0010 10505.18 19231.33 5306 M300784 63 33.764525 3.734824 Colon B12 MSEB0010 11637.20 19482.30 4656 M300786 44 28.493828 3.612460 Colon B12 MSEB0010 11099.18 18995.87 4656 M300787 106 45.535131 3.977904 Colon B12 MSEB0010 10460.97 19686.94 4656 M300788 62 33.583894 3.720720 Colon B12 MSEB0010 10442.08 20914.36 4656 M300791 47 26.239698 3.687149 Colon B12 MSEB0010 11146.56 21763.22 4656 M300792 103 44.068606 4.152050 Colon B12 MSEB0010 11630.33 20543.59 5140 M300794 105 44.712540 3.957158 Colon B12 MSEB0010 11673.94 21223.36 5140 M300797 96 39.849925 3.926466 Colon B12 MSEB0010 12879.98 20904.88 5140 M300798 116 39.422201 4.074559 Colon B12 MSEB0010 12256.49 21371.45 5140 # Print alpha diversity summary alpha_diversity %&gt;% select(richness, neutral, phylogenetic, section, batch) %&gt;% group_by(section, batch) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() tinytable_qfacpcfg64x0i8t7yu7n .table td.tinytable_css_fghnofked1x2tgdyef2e, .table th.tinytable_css_fghnofked1x2tgdyef2e { border-bottom: solid 0.1em #d3d8dc; } section batch richness neutral phylogenetic Caecum right MSEB0006 89.50000 39.563947 3.840313 Colon MSEB0010 77.96923 38.850665 3.748993 Ileum MSEB0006 3.59375 2.222942 1.322728 alpha_diversity %&gt;% pivot_longer(!c(microsample,section,cryosection,type,buffer,batch,Xcoord,Ycoord,size), names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(quality,by=join_by(microsample==microsample)) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(x=section, y=value, color=quality, group=section))+ scale_color_gradient(low = &quot;red&quot;, high = &quot;green&quot;, name = &quot;Quality&quot;) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=0.2) + facet_grid(metric ~ section, scales = &quot;free&quot;) 5.2 Unfiltered #Calculate Hill numbers richness &lt;- genome_counts %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=0) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(richness=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) neutral &lt;- genome_counts %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(neutral=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) phylogenetic &lt;- genome_counts %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(where(~!all(. == 0))) %&gt;% hilldiv(.,q=1,tree=genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% rename(phylogenetic=1) %&gt;% rownames_to_column(var=&quot;microsample&quot;) # Merge alpha diversities alpha_diversity &lt;- richness %&gt;% full_join(neutral,by=join_by(microsample==microsample)) %&gt;% full_join(phylogenetic,by=join_by(microsample==microsample)) %&gt;% left_join(sample_metadata, by=join_by(microsample==microsample)) # Write alpha diversities alpha_diversity %&gt;% write_tsv(&quot;results/alpha_div_unfiltered.tsv&quot;) # Print alpha diversity alpha_diversity %&gt;% select(microsample,richness, neutral, phylogenetic, section, buffer, Xcoord, Ycoord, size) %&gt;% tt() tinytable_srakodzdy7yerla62pth .table td.tinytable_css_8zkux9q78jbeu6ulqrf5, .table th.tinytable_css_8zkux9q78jbeu6ulqrf5 { border-bottom: solid 0.1em #d3d8dc; } microsample richness neutral phylogenetic section buffer Xcoord Ycoord size M300554 252 59.048724 4.005426 Caecum right B11 74953.325 27445.67 4976 M300555 234 29.591689 3.136402 Caecum right B11 72020.280 33695.14 4976 M300556 242 52.377341 3.862228 Caecum right B11 75415.387 27819.35 4976 M300557 252 60.880377 3.919625 Caecum right B11 76113.477 28351.85 4976 M300558 147 16.388623 3.084364 Caecum right B11 NA NA NA M300559 252 59.602278 4.019172 Caecum right B11 76849.228 29025.05 4976 M300560 252 58.645287 4.181971 Caecum right B11 75971.705 29352.86 4976 M300561 252 57.105278 4.190661 Caecum right B11 76680.937 29558.16 4976 M300562 252 60.378741 4.115130 Caecum right B11 74883.318 29170.18 5140 M300563 252 59.645294 4.072592 Caecum right B11 75220.992 29120.51 5140 M300564 246 52.890970 4.203353 Caecum right B11 75894.617 29134.86 5140 M300565 48 13.113524 4.215440 Caecum right B11 72986.812 36482.20 5140 M300566 251 58.164898 3.882696 Caecum right B11 76922.541 29224.45 5140 M300567 252 57.810869 4.124295 Caecum right B11 77492.203 29097.78 5140 M300568 40 10.638020 2.635867 Caecum right B11 NA NA NA M300569 252 60.745119 4.196834 Caecum right B11 77495.465 28977.76 5140 M300570 252 57.723816 4.052962 Caecum right B11 74950.841 28473.11 4815 M300571 251 56.661744 4.017740 Caecum right B11 75619.946 28632.40 4815 M300572 249 56.949762 4.191364 Caecum right B11 76345.933 29031.81 4815 M300573 178 34.564442 3.598634 Caecum right B11 74609.411 34469.39 4815 M300574 251 57.725467 4.082745 Caecum right B11 76920.997 29347.99 4815 M300575 135 59.863456 4.655632 Caecum right B11 NA NA NA M300576 251 57.389815 4.083745 Caecum right B11 77104.532 29588.79 4815 M300577 252 57.842513 4.079376 Caecum right B11 77418.895 29907.92 4815 M300578 252 57.743125 4.012410 Caecum right B12 76897.212 30198.48 5140 M300579 221 38.829262 3.357156 Caecum right B12 73304.285 36352.33 5140 M300580 250 55.871239 4.042301 Caecum right B12 77026.940 30039.53 5140 M300581 252 56.693254 4.077549 Caecum right B12 77028.597 29718.20 5140 M300582 251 55.908533 4.078589 Caecum right B12 77019.213 29448.24 5140 M300583 252 51.029088 4.100996 Caecum right B12 77009.202 28923.10 5140 M300584 252 57.684739 4.058398 Caecum right B12 77019.413 28061.84 5140 M300585 85 36.312174 5.379855 Caecum right B12 NA NA NA M300586 48 21.091967 4.510739 Caecum right B12 73652.539 35857.69 5141 M300587 8 3.491849 1.592392 Caecum right B12 NA NA NA M300588 252 54.764773 4.072549 Caecum right B12 75330.017 26890.36 5141 M300589 253 54.565428 4.052600 Caecum right B12 75862.866 27323.96 5141 M300590 252 53.695112 4.232105 Caecum right B12 76508.231 27653.84 5141 M300591 193 44.669792 3.308027 Caecum right B12 76848.926 27815.44 5141 M300592 251 52.703789 4.157326 Caecum right B12 77351.464 28017.27 5141 M300593 253 54.697582 4.159239 Caecum right B12 77854.216 28261.49 5141 M300594 252 57.267685 4.154592 Caecum right B12 75509.650 26477.82 4976 M300595 251 49.303188 4.159722 Caecum right B12 75650.540 26591.91 4976 M300596 252 51.537550 4.129928 Caecum right B12 75822.838 26598.11 4976 M300597 251 52.894386 4.187497 Caecum right B12 76147.102 26625.28 4976 M300598 252 54.366506 4.127848 Caecum right B12 76899.245 26623.52 4976 M300599 252 55.014439 4.041644 Caecum right B12 76852.725 26643.02 4976 M300600 37 12.471508 3.871589 Caecum right B12 NA NA NA M300601 122 44.752920 6.549661 Caecum right B12 72982.582 21722.53 4976 M300602 195 3.770399 1.526286 Ileum B11 104424.700 42749.48 5140 M300603 172 3.443781 1.761321 Ileum B11 104606.900 42459.54 5140 M300604 54 11.488595 3.430860 Ileum B11 101758.400 36668.70 5140 M300605 154 3.468041 1.580848 Ileum B11 104954.500 42730.89 5140 M300606 231 42.312840 4.055184 Ileum B11 105122.500 42666.74 5140 M300607 25 4.742713 1.877699 Ileum B11 NA NA NA M300608 180 3.093547 1.514223 Ileum B11 105262.700 42589.77 5140 M300609 207 3.586403 1.515176 Ileum B11 105328.900 42703.60 5140 M300610 193 3.434464 1.521143 Ileum B11 105102.400 41497.10 4976 M300611 75 4.120703 1.781889 Ileum B11 105146.000 41596.22 4976 M300612 186 3.576177 1.512044 Ileum B11 105281.000 41702.52 4976 M300613 71 2.227148 1.360170 Ileum B11 105408.300 41533.66 4976 M300614 51 13.957408 4.473484 Ileum B11 101928.600 37181.60 4976 M300615 76 33.344988 4.963147 Ileum B11 NA NA NA M300616 174 1.845652 1.249203 Ileum B11 105595.700 41999.37 4976 M300617 236 5.332503 1.984855 Ileum B11 105983.000 42106.21 4976 M300618 56 8.503252 2.626672 Ileum B11 101861.400 37375.71 5306 M300619 175 2.550470 1.410755 Ileum B11 106845.700 41525.80 5306 M300620 28 7.640770 2.905044 Ileum B11 NA NA NA M300621 119 12.148781 3.349201 Ileum B11 107360.500 41744.06 5306 M300622 221 4.591257 1.766175 Ileum B11 107262.300 42133.87 5306 M300623 160 3.966379 1.799967 Ileum B11 107820.600 41925.02 5306 M300624 115 1.651694 1.232074 Ileum B11 107233.500 41764.35 5306 M300625 144 5.388601 2.320102 Ileum B11 107258.100 42448.02 5306 M300626 41 8.538645 2.863586 Ileum B12 NA NA NA M300627 144 3.518088 1.512361 Ileum B12 108112.000 45420.81 4815 M300628 175 3.173885 1.607903 Ileum B12 108221.600 45346.45 4815 M300629 182 2.393480 1.450458 Ileum B12 108085.500 45636.13 4815 M300630 182 2.332205 1.406259 Ileum B12 108093.700 45848.93 4815 M300631 208 4.627633 1.966486 Ileum B12 107697.500 45704.29 4815 M300632 139 31.364862 4.012416 Ileum B12 102872.400 38456.93 4815 M300633 216 2.511084 1.495177 Ileum B12 107727.500 45487.09 4815 M300634 213 3.122181 1.540972 Ileum B12 106635.900 42106.55 5384 M300635 30 5.405679 2.215422 Ileum B12 NA NA NA M300636 204 3.509144 1.743930 Ileum B12 106545.500 42220.70 5384 M300637 51 2.910588 1.509677 Ileum B12 106948.100 42956.50 5384 M300638 203 3.460643 1.642359 Ileum B12 106647.000 42288.86 5384 M300639 224 2.990724 1.567194 Ileum B12 106800.500 41821.88 5384 M300640 139 2.600750 1.476414 Ileum B12 107052.700 42525.49 5384 M300641 98 27.021534 5.575144 Ileum B12 103203.400 38334.96 5384 M300642 72 2.706444 1.584137 Ileum B12 108030.700 43599.50 4976 M300643 16 5.123028 1.769523 Ileum B12 101876.900 39000.58 4976 M300644 225 1.815382 1.244790 Ileum B12 NA NA NA M300645 192 1.687109 1.278009 Ileum B12 107988.200 43509.47 4976 M300646 64 13.841432 3.496467 Ileum B12 NA NA NA M300647 201 3.557171 1.509236 Ileum B12 107969.500 43138.84 4976 M300648 198 2.029309 1.315127 Ileum B12 107883.700 43169.50 4976 M300649 74 4.148091 1.828161 Ileum B12 107984.200 43047.52 4976 M300704 248 46.252453 4.111733 Colon B11 10676.967 15665.82 5140 M300705 246 63.904552 3.974667 Colon B11 10812.315 15756.81 5140 M300706 245 55.306851 4.105141 Colon B11 11055.416 15656.04 5140 M300707 249 56.014561 4.107466 Colon B11 11216.842 15649.19 5140 M300708 250 56.919155 3.968289 Colon B11 11879.874 15812.03 5140 M300709 81 47.883513 4.609160 Colon B11 8479.772 19536.22 5140 M300710 51 27.091373 4.608891 Colon B11 NA NA NA M300711 251 55.676485 4.046441 Colon B11 12278.126 15716.47 5140 M300712 251 58.724925 4.031074 Colon B11 12139.937 15889.85 4976 M300713 21 14.819100 3.257271 Colon B11 8681.188 19729.90 4976 M300714 249 54.478111 4.133304 Colon B11 12138.958 16135.22 4976 M300715 251 57.788457 3.979188 Colon B11 12164.850 16944.14 4976 M300716 249 60.671013 3.921632 Colon B11 12650.442 17948.63 4976 M300717 249 59.400190 4.100718 Colon B11 13434.733 19286.92 4976 M300718 250 59.781144 3.989150 Colon B11 13238.197 20246.16 4976 M300719 64 9.437906 2.619712 Colon B11 NA NA NA M300720 134 51.228630 4.251175 Colon B11 7385.375 20281.05 5306 M300721 250 62.754999 3.906901 Colon B11 10372.825 20398.48 5306 M300722 247 57.049492 4.044123 Colon B11 11173.110 20408.59 5306 M300724 250 61.740250 4.007957 Colon B11 13295.246 18310.97 5306 M300725 238 59.611724 3.747036 Colon B11 12939.033 18128.54 5306 M300726 89 40.430701 5.493395 Colon B11 NA NA NA M300727 251 58.839874 4.128478 Colon B11 12777.094 17606.38 5306 M300728 97 56.384971 4.868447 Colon B11 NA NA NA M300729 236 54.296016 3.909034 Colon B11 12551.788 21653.42 4815 M300730 241 62.293446 4.038759 Colon B11 12478.733 21318.48 4815 M300731 251 60.746384 3.722194 Colon B11 12362.879 20562.75 4815 M300732 227 64.774842 4.057109 Colon B11 12575.296 20313.69 4815 M300733 245 58.847813 3.927334 Colon B11 12653.670 19720.44 4815 M300734 153 57.496349 3.636022 Colon B11 17189.272 29742.58 4815 M300735 251 61.238385 3.925052 Colon B11 11471.313 19136.40 4815 M300736 251 60.609377 3.980455 Colon B11 13507.345 18129.93 5647 M300737 224 64.693351 3.988141 Colon B11 13457.119 17998.50 5647 M300738 247 61.882156 3.928037 Colon B11 13010.058 17942.33 5647 M300739 26 17.627844 4.247952 Colon B11 NA NA NA M300740 123 55.283007 4.637859 Colon B11 17787.836 12522.88 5647 M300741 250 58.936098 3.954625 Colon B11 12684.368 17716.75 5647 M300742 251 59.273326 4.047533 Colon B11 12621.546 17543.54 5647 M300743 250 60.307163 3.931065 Colon B11 12372.901 16657.60 5647 M300744 245 61.953169 3.854428 Colon B11 11994.451 14153.13 4976 M300745 251 60.978957 3.867243 Colon B11 12007.497 14299.24 4976 M300746 46 10.208392 2.834892 Colon B11 NA NA NA M300747 250 62.203433 3.804880 Colon B11 12029.348 14662.48 4976 M300748 251 59.304676 3.841718 Colon B11 12076.591 15671.87 4976 M300749 94 51.104739 4.166941 Colon B11 8706.301 29038.15 4976 M300750 251 59.229995 3.963137 Colon B11 12060.510 16688.98 4976 M300751 251 62.453455 3.921567 Colon B11 11931.196 19713.77 4976 M300752 37 10.231365 3.454552 Colon B12 13243.970 30714.35 4815 M300753 250 54.258825 3.870480 Colon B12 13884.299 20066.13 4815 M300754 20 11.105970 3.441836 Colon B12 NA NA NA M300755 250 56.033041 4.093147 Colon B12 13715.675 19528.97 4815 M300756 250 53.959621 4.076681 Colon B12 13508.645 19087.25 4815 M300757 251 54.271559 4.130368 Colon B12 13209.324 18911.46 4815 M300758 251 60.601778 3.913348 Colon B12 13454.496 18211.88 4815 M300759 252 57.034625 4.139033 Colon B12 13356.627 17525.29 4815 M300760 249 52.510697 4.092732 Colon B12 12866.495 15050.07 5140 M300761 251 55.107864 4.093000 Colon B12 12921.938 15311.99 5140 M300762 28 8.726889 3.118462 Colon B12 NA NA NA M300763 252 59.548863 4.016797 Colon B12 12995.946 15577.55 5140 M300764 251 58.308107 3.910202 Colon B12 12999.107 16205.10 5140 M300765 177 42.010405 4.149764 Colon B12 13266.800 30315.90 5140 M300766 250 56.763364 4.133256 Colon B12 13128.597 18741.54 5140 M300767 249 51.972455 4.006491 Colon B12 13103.684 20085.08 5140 M300768 249 54.447298 4.031809 Colon B12 12299.778 15261.25 4815 M300769 34 14.270606 3.890768 Colon B12 11581.666 28330.79 4815 M300770 94 30.334103 4.919868 Colon B12 NA NA NA M300771 248 57.969189 4.027783 Colon B12 12230.636 14216.24 4815 M300772 250 59.731720 3.899035 Colon B12 12192.804 14393.52 4815 M300773 252 62.413288 3.621678 Colon B12 12122.684 16011.33 4815 M300774 251 56.385399 4.122407 Colon B12 12155.624 16716.47 4815 M300775 250 53.553768 4.039717 Colon B12 12941.429 17792.21 4815 M300776 251 57.024440 3.986191 Colon B12 10481.871 16446.70 5306 M300777 215 63.829415 4.004581 Colon B12 10486.437 16559.54 5306 M300778 250 57.359784 4.014746 Colon B12 10349.884 16974.87 5306 M300779 19 10.646900 4.202734 Colon B12 NA NA NA M300780 251 53.856346 4.031943 Colon B12 10386.112 17635.79 5306 M300781 73 27.241929 4.346054 Colon B12 9381.647 30091.13 5306 M300782 251 53.845025 4.039524 Colon B12 10499.609 18348.85 5306 M300783 251 57.754394 4.054507 Colon B12 10505.179 19231.33 5306 M300784 248 53.052589 4.019137 Colon B12 11637.205 19482.30 4656 M300785 56 41.351511 4.731183 Colon B12 9262.832 30609.58 4656 M300786 249 56.732741 4.172364 Colon B12 11099.177 18995.87 4656 M300787 251 57.074180 4.060990 Colon B12 10460.974 19686.94 4656 M300788 250 54.485767 4.019748 Colon B12 10442.084 20914.36 4656 M300789 56 30.557213 4.776009 Colon B12 NA NA NA M300790 155 39.641124 3.590062 Colon B12 10801.293 21241.46 4656 M300791 249 49.310887 4.169707 Colon B12 11146.557 21763.22 4656 M300792 251 55.663696 4.257795 Colon B12 11630.334 20543.59 5140 M300793 152 30.393903 3.933883 Colon B12 NA NA NA M300794 250 56.716658 4.055058 Colon B12 11673.937 21223.36 5140 M300795 208 55.332481 3.811929 Colon B12 11602.686 22068.26 5140 M300796 30 12.304417 4.442865 Colon B12 13661.804 28676.18 5140 M300797 252 51.906800 4.046237 Colon B12 12879.975 20904.88 5140 M300798 251 47.129111 4.133944 Colon B12 12256.492 21371.45 5140 M300799 157 46.746231 3.709551 Colon B12 11843.311 19915.73 5140 # Print alpha diversity summary alpha_diversity %&gt;% select(richness, neutral, phylogenetic, section, buffer) %&gt;% group_by(section, buffer) %&gt;% summarise(richness=mean(richness), neutral=mean(neutral), phylogenetic=mean(phylogenetic)) %&gt;% tt() tinytable_5i3be4cibzi0xfjsaeul .table td.tinytable_css_6oncikv45u61cs6aqzjt, .table th.tinytable_css_6oncikv45u61cs6aqzjt { border-bottom: solid 0.1em #d3d8dc; } section buffer richness neutral phylogenetic Caecum right B11 220.6250 50.239502 3.942011 Caecum right B12 208.0833 46.973329 4.100613 Colon B11 204.8085 53.573038 4.004198 Colon B12 198.3750 46.906424 4.037582 Ileum B11 137.4167 7.924440 2.229897 Ileum B12 145.4583 6.016212 1.983800 alpha_diversity %&gt;% pivot_longer(!c(microsample,section,cryosection,type,buffer,batch,Xcoord,Ycoord,size), names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(quality,by=join_by(microsample==microsample)) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(x=section, y=value, color=quality, group=section))+ scale_color_gradient(low = &quot;red&quot;, high = &quot;green&quot;, name = &quot;Quality&quot;) + geom_boxplot(outlier.shape = NA) + geom_jitter(width=0.2) + facet_grid(metric ~ section, scales = &quot;free&quot;) "],["beta-diversity.html", "Chapter 6 Beta diversity", " Chapter 6 Beta diversity selected_samples &lt;- sample_metadata %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(type == &quot;Positive&quot;) %&gt;% filter(microsample %in% colnames(genome_counts_filt)) %&gt;% filter(!is.na(Xcoord)) %&gt;% select(microsample) %&gt;% pull() #Calculate Hill numbers richness_caecum &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(all_of(selected_samples)) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=0, metric=&quot;C&quot;, out=&quot;pair&quot;) neutral_caecum &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(all_of(selected_samples)) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;pair&quot;) phylogenetic_caecum &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(all_of(selected_samples)) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, tree=genome_tree, metric=&quot;C&quot;, out=&quot;pair&quot;) # Merge beta diversities beta_diversity &lt;- richness_caecum %&gt;% full_join(neutral_caecum,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% full_join(phylogenetic_caecum,by=c(&quot;first&quot;, &quot;second&quot;)) %&gt;% rename(richness=C.x, neutral=C.y, phylogenetic=C) # Write alpha diversities beta_diversity %&gt;% write_tsv(&quot;results/beta_div.tsv&quot;) #Select high-quality samples caecum_samples_hq &lt;- sample_metadata %&gt;% left_join(quality,by=join_by(microsample==microsample)) %&gt;% filter(section != &quot;Ileum&quot;) %&gt;% filter(quality &gt;= 5) %&gt;% filter(!is.na(Xcoord)) %&gt;% select(microsample) %&gt;% pull() caecum_samples_nmds &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;) %&gt;% select(all_of(caecum_samples_hq)) %&gt;% select(where(~!all(. == 0))) %&gt;% hillpair(.,q=1, metric=&quot;C&quot;, out=&quot;dist&quot;) %&gt;% metaMDS(.,trymax = 999, k=2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;microsample&quot;) %&gt;% left_join(sample_metadata, by = join_by(microsample == microsample)) %&gt;% group_by(section) %&gt;% mutate(microsample_x=mean(NMDS1), microsample_y=mean(NMDS2)) caecum_samples_nmds %&gt;% ggplot(aes(x=NMDS1,y=NMDS2, color=section)) + geom_point(size=2) + geom_segment(aes(x=microsample_x, y=microsample_y, xend=NMDS1, yend=NMDS2), alpha=0.2) + scale_color_manual(values=c(&quot;#a3d1cf&quot;,&quot;#d1a3cf&quot;)) + theme_classic() + theme(legend.position=&quot;right&quot;, legend.box=&quot;vertical&quot;) + guides(color=guide_legend(title=&quot;Region&quot;)) "],["spatial-analyses.html", "Chapter 7 Spatial analyses 7.1 Load image 7.2 Taxon-specific visualisations", " Chapter 7 Spatial analyses load(&quot;data/data.Rdata&quot;) quality &lt;- read_tsv(&quot;results/quality.tsv&quot;) alpha_filtered &lt;- read_tsv(&quot;results/alpha_div_filtered.tsv&quot;) alpha_unfiltered &lt;- read_tsv(&quot;results/alpha_div_unfiltered.tsv&quot;) beta &lt;- read_tsv(&quot;results/beta_div.tsv&quot;) 7.1 Load image #Based on Bryan measurements in 2023/08/11 #tl=top-left, br=bottom-right slide1_tl &lt;- c(250,2212) # (x, y) for top-left slide1_br &lt;- c(25660,77470) # (x, y) for bottom-right membrane1_tl &lt;- c(4962,8698) # (x, y) for top-left membrane1_br &lt;- c(21013,53732) # (x, y) for bottom-right slide2_tl &lt;- c(28983,2004) # (x, y) for top-left slide2_br &lt;- c(54565,77541) # (x, y) for bottom-right membrane2_tl &lt;- c(33689,8698) # (x, y) for top-left membrane2_br &lt;- c(49650,53658) # (x, y) for bottom-right slide3_tl &lt;- c(64978,1938) # (x, y) for top-left slide3_br &lt;- c(90644,77372) # (x, y) for bottom-right membrane3_tl &lt;- c(69768,8658) # (x, y) for top-left membrane3_br &lt;- c(85819,53692) # (x, y) for bottom-right slide4_tl &lt;- c(93780,1946) # (x, y) for top-left slide4_br &lt;- c(119690,77465) # (x, y) for bottom-right membrane4_tl &lt;- c(98718,8682) # (x, y) for top-left membrane4_br &lt;- c(114760,53772) # (x, y) for bottom-right # Detect slide x_dim &lt;- sample_metadata %&gt;% filter(cryosection == &quot;G121eO301A&quot;) %&gt;% select(Xcoord) %&gt;% summarise(x_min=min(Xcoord),x_max=max(Xcoord)) if(x_dim[1] &gt; membrane1_tl[1] &amp; x_dim[2] &lt; membrane1_br[1]){ slide=&quot;membrane1&quot; slide_dim=c(membrane1_tl,membrane1_br) } if(x_dim[1] &gt; membrane2_tl[1] &amp; x_dim[2] &lt; membrane2_br[1]){ slide=&quot;membrane2&quot; slide_dim=c(membrane2_tl,membrane2_br) } if(x_dim[1] &gt; membrane3_tl[1] &amp; x_dim[2] &lt; membrane3_br[1]){ slide=&quot;membrane3&quot; slide_dim=c(membrane3_tl,membrane3_br) } if(x_dim[1] &gt; membrane4_tl[1] &amp; x_dim[2] &lt; membrane4_br[1]){ slide=&quot;membrane4&quot; slide_dim=c(membrane4_tl,membrane4_br) } slide_img &lt;- readJPEG(&quot;data/G121eO301.jpg&quot;, native = TRUE) # defining the x coordinates xpos &lt;- c(75415,76897,77419) # defining the y coordinates ypos &lt;- c(27819,30198,29908) data_frame = data.frame(xpos = xpos, ypos = ypos) ggplot(data_frame, aes(xpos, ypos)) + coord_cartesian(ylim = c(slide_dim[2],slide_dim[4]))+ xlim(c(slide_dim[1],slide_dim[3])) + geom_point(color=&quot;red&quot;) + theme_classic() + theme(panel.background = element_rect(fill=&#39;transparent&#39;), plot.background = element_rect(fill=&#39;transparent&#39;, color=NA), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.background = element_rect(fill=&#39;transparent&#39;), legend.box.background = element_rect(fill=&#39;transparent&#39;))+ inset_element(p = slide_img, left = 0, right = 1, top = 1, bottom = 0, align_to = &#39;panel&#39;, on_top=FALSE) ## Spatial overview sample_metadata_filt &lt;- sample_metadata %&gt;% filter(!is.na(Xcoord)) %&gt;% left_join(alpha_filtered %&gt;% select(microsample,neutral), by=join_by(microsample==microsample)) %&gt;% filter(cryosection == &quot;G121eO301A&quot;) %&gt;% left_join(quality, by=join_by(microsample==microsample)) beta_filtered &lt;- beta %&gt;% left_join(sample_metadata_filt %&gt;% select(microsample,Xcoord,Ycoord), by=join_by(first==microsample)) %&gt;% rename(x=Xcoord,y=Ycoord) %&gt;% left_join(sample_metadata_filt %&gt;% select(microsample,Xcoord,Ycoord), by=join_by(second==microsample)) %&gt;% rename(xend=Xcoord,yend=Ycoord) %&gt;% arrange(neutral) sample_metadata_filt %&gt;% ggplot(aes(x=Xcoord, y=Ycoord)) + geom_segment(data=beta_filtered, aes(x=x,y=y,xend=xend, yend=yend, color = neutral), size = 1) + scale_color_gradient(low = &quot;#f4f4f4&quot;, high = &quot;grey&quot;, name = &quot;Dissimilarity&quot;) + new_scale_color() + geom_point(aes(color=quality),size=4) + scale_color_gradient(low = &quot;red&quot;, high = &quot;green&quot;, name = &quot;Quality&quot;) + theme_classic() sample_metadata_filtered &lt;- sample_metadata %&gt;% filter(!is.na(Xcoord)) %&gt;% left_join(alpha_filtered %&gt;% select(microsample,neutral), by=join_by(microsample==microsample)) %&gt;% filter(cryosection == &quot;G121eO301A&quot;) %&gt;% left_join(quality, by=join_by(microsample==microsample)) %&gt;% filter(quality&gt;=5) beta_filtered &lt;- beta %&gt;% inner_join(sample_metadata_filtered %&gt;% select(microsample,Xcoord,Ycoord), by=join_by(first==microsample)) %&gt;% rename(x=Xcoord,y=Ycoord) %&gt;% inner_join(sample_metadata_filtered %&gt;% select(microsample,Xcoord,Ycoord), by=join_by(second==microsample)) %&gt;% rename(xend=Xcoord,yend=Ycoord) %&gt;% arrange(neutral) sample_metadata_filtered %&gt;% ggplot(aes(x=Xcoord, y=Ycoord)) + geom_segment(data=beta_filtered, aes(x=x,y=y,xend=xend, yend=yend, color = neutral), size = 1) + scale_color_gradient(low = &quot;#f4f4f4&quot;, high = &quot;grey&quot;, name = &quot;Dissimilarity&quot;) + new_scale_color() + geom_point(size=4) + theme_classic() 7.2 Taxon-specific visualisations taxon_level=&quot;order&quot; taxon=&quot;o__Lactobacillales&quot; genome_counts %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;microsample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(microsample,!!sym(taxon_level)) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(!!sym(taxon_level) == taxon) %&gt;% left_join(., sample_metadata, by = join_by(microsample == microsample)) %&gt;% #append sample metadata filter(cryosection == &quot;G121eO301A&quot;) %&gt;% left_join(quality, by=join_by(microsample==microsample)) %&gt;% filter(quality&gt;=5) %&gt;% mutate(Xcoord=round(Xcoord,0)) %&gt;% mutate(Ycoord=round(Ycoord,0)) %&gt;% ggplot(aes(x=Xcoord, y=Ycoord, color=relabun)) + geom_point(size=4) + scale_color_gradient(low = &quot;white&quot;, high = &quot;blue&quot;) + theme_classic() "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
